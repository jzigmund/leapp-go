swagger: '2.0'
info:
  description: "LeApp daemon API"
  version: "1.0"
  title: "LeApp daemon API"
basePath: "/v1"

consumes:
- "application/json"
produces:
- "application/json"

paths:
  /destroy-container:
    post:
      summary: "Delete the container on target"
      parameters:
       - name: "body"
         in: "body"
         required: true
         schema:
           $ref: '#/definitions/DestroyContainerInput'

      responses:
        200:
          description: "Success response"
          schema:
            $ref: '#/definitions/Result'

  /port-inspect:
    post:
      summary: "Inspect ports on target"
      parameters:
       - name: "body"
         in: "body"
         required: true
         schema:
           $ref: '#/definitions/PortInspectInput'

      responses:
        200:
          description: "Success response"
          schema:
            $ref: '#/definitions/Result'

  /port-map:
    post:
      summary: "Map ports given by use or detected on source to ports available on target"
      parameters:
       - name: "body"
         in: "body"
         required: true
         schema:
           $ref: '#/definitions/PortMapInput'

      responses:
        200:
          description: "Success response"
          schema:
            $ref: '#/definitions/Result'

  /check-target:
    post:
      summary: "Check services on a target system"
      parameters:
       - name: "body"
         in: "body"
         required: true
         schema:
           $ref: '#/definitions/CheckTargetInput'

      responses:
        200:
          description: "Success response"
          schema:
            $ref: '#/definitions/Result'

definitions:
  ## Base definitions:
  TargetHostBase:
    type: "object"
    description: "Base schema for target_host field"
    properties:
      target_host:
        type: "string"
        default: "localhost"

  SourceHostBase:
    type: "object"
    description: "Base schema for source_host field"
    required:
      - "source_host"
    properties:
      source_host:
        type: "string"

  PortListItemBase:
    type: "object"
    description: "A map of ports with their respective data (can be just an empty map)"
    required:
      - "port"
      - "port_data"
    properties:
      port:
        type: "string"
      port_data:
        type: "object"
        required:
          - "name"
        properties:
          name:
            description: "The name of a service running on this port, can be empty"
            type: "string"
            default: ""

  PortListBase:
    type: "object"
    description: "A map of TCP/UDP ports"
    required:
      - "tcp"
      - "udp"
    properties:
      tcp:
        # hash of PortListItemBase
        $ref: "#/definitions/PortListItemBase"
      udp:
        # hash of PortListItemBase
        $ref: "#/definitions/PortListItemBase"

  PortMappingItemBase:
    type: "object"
    description: ""
    required:
      - "protocol"
      - "exposed_port"
      - "port"
    properties:
      protocol:
        description: "Port protocol"
        type: "string"
        enum: ["tcp", "udp"]
      exposed_port:
        description: "Port on which the service will be mapped to"
        type: "integer"
      port:
        description: "Port on which the service is currently listening"
        type: "integer"

  PortMappingBase:
    type: "object"
    description: ""
    properties:
      ports:
        type: "array"
        items:
          $ref: '#/definitions/PortMappingItemBase'
  ##
  DestroyContainerInput:
    type: "object"
    description: "Destroy/Delete container request"
    required:
      - "container_name"
    properties:
      container_name:
        type: "string"
      target_user:
        type: "string"
        default: "root"
    allOf:
      - $ref: '#/definitions/TargetHostBase'

  PortInspectInput:
    type: "object"
    description: "Inspect ports request"
    allOf:
      - $ref: '#/definitions/TargetHostBase'
    properties:
      scan_options:
        type: "object"
        properties:
          port_range:
            type: "string"
            default: ""
          shallow_scan:
            type: "boolean"
            default: False

  PortMapInput:
    type: "object"
    description: "Inspect ports request"
    allOf:
      - $ref: '#/definitions/TargetHostBase'
      - $ref: '#/definitions/SourceHostBase'
    properties:
      tcp_ports:
        $ref: '#/definitions/PortMappingBase'
      excluded_tcp_ports:
        $ref: '#/definitions/PortListBase'
      default_port_map:
        type: "boolean"
        default: True

  CheckTargetInput:
    type: "object"
    description: "Check target request"
    properties:
      target_user_name:
        type: "string"
        default: "root"
      check_target_service_status:
        type: "boolean"
        default: False
    allOf:
      - $ref: '#/definitions/TargetHostBase'


  Result:
    description: "Default API response"
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: '#/definitions/Error'
        default: []
      data:
        type: object

  Error:
    type: "object"
    description: ""
    required:
      - "code"
    properties:
      code:
        type: "integer"
        enum:
          - 1
          - 2
          - 3
        description: >
          Error codes:
            * `1` - Error manipulating input data
            * `2` - Error in the execution of actor-runner
            * `3` - Error manipulating data generated by actors
      message:
        type: "string"
        default: ""
